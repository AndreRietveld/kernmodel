<archimate:Principle
    xmlns:archimate="http://www.archimatetool.com/archimate"
    name="Een applicatie is een beheerbare eenheid"
    id="EAID_12A1BF40_7AE9_43cc_A94E_E91667958BFE"
    documentation="PA02 - Applicatiearchitectuurkader&#xA;Dit principe is bedoeld om applicaties te onderkennen die qua omvang/granulariteit een goede eenheid zijn voor functioneel en applicatief beheer.  &#xA;Vanuit beheeroptiek is het belangrijk dat een applicatie onafhankelijk van andere applicaties ontwikkeld en beheerd kan worden. Hierdoor blijft de impact op andere  applicaties bij wijzigingen zeer beperkt tot nihil. Om dit te bereiken kan het noodzakelijk zijn om een applicatie op te knippen in kleinere eenheden. Het doel van een applicatie moet echter nog wel herkenbaar zijn voor de beheerorganisatie. &#xA;Uit oogpunt van beheerbaarheid gelden de volgende criteria voor het (verder) afbakenen van applicaties:&#xA;&#x9;- De beheerbaarheid komt onder druk omdat de omvang van de applicatie teveel toeneemt. Indicatie: een gemiddelde aanpassing zou door één bouwer uitgevoerd moeten kunnen worden;&#xA;&#x9;- Elke extra logische applicatie betekent overhead tijdens ontwikkeling en beheer; te klein is dus ook niet goed. Indicatie: een logische applicatie vergt tenminste 8 weken bouwen door één bouwer;&#xA;&#x9;- Er is sprake van verschillende typen externe (en in sommige gevallen interne) klantgroepen (bijvoorbeeld verschillende sectoren bij het inwinnen van gegevens);&#xA;&#x9;- Het logisch datamodel kan eenvoudig opgesplitst worden naar meerdere onafhankelijke modellen (bijvoorbeeld alleen een koppeling op basis van BAP-id);&#xA;&#x9;- Functionaliteit is eenvoudig op te splitsen naar onafhankelijke brokken zonder te veel overlap. Het koppelvlak is expliciet te maken;&#xA;&#x9;- Een duidelijk verschil in levensverwachting van de brokken functionaliteit. Door op te splitsen wordt het goedkoper om onderdelen op te ruimen;&#xA;&#x9;- Minimale koppeling, maximale interne samenhang: wanneer het aantal koppelingen tussen de applicaties toeneemt dan gaat dit ten koste van de beheerbaarheid en flexibiliteit.&#xA;&#xA;Rationale:&#xA;Dit principe leidt tot flexibiliteit omdat applicaties onafhankelijk van elkaar te ontwikkelen en te beheren zijn.&#xA;Het beheer is efficiënt uit te voeren door de juiste granulariteit te kiezen. &#xA;&#xA;Implicaties:&#xA;&#x9;- Meerdere applicaties per informatiedomein.&#xA;&#x9;- Toename van het aantal interfaces tussen applicaties -> dit kan een negatief effect hebben op de beheerbaarheid.&#xA;&#xA;https://wiki/display/ARCHITECT/PA02+Een+applicatie+is+een+beheerbare+eenheid "/>
